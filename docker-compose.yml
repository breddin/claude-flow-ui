
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "9001:3001"
    container_name: claude-flow-backend-prod
    restart: unless-stopped
    env_file:
      - .env.local
    environment:
      - NODE_ENV=production
      - DEVCONTAINER=false
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SCHEMA=${DB_SCHEMA}
      - DB_POOL_MIN=${DB_POOL_MIN}
      - DB_POOL_MAX=${DB_POOL_MAX}
      - DB_POOL_IDLE_TIMEOUT=${DB_POOL_IDLE_TIMEOUT}
      - DB_POOL_CONNECTION_TIMEOUT=${DB_POOL_CONNECTION_TIMEOUT}
      - DB_SSL_MODE=${DB_SSL_MODE}
      - DB_SSL_REJECT_UNAUTHORIZED=${DB_SSL_REJECT_UNAUTHORIZED}
      - DB_SSL_CA_CERT_PATH=${DB_SSL_CA_CERT_PATH}
    volumes:
      - claude-flow-logs:/var/log
    networks:
      - claude-flow-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - REACT_APP_API_URL=http://localhost:9001
    ports:
      - "9000:3000"
    container_name: claude-flow-frontend-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:9001
      - WDS_SOCKET_HOST=localhost
      - WDS_SOCKET_PORT=9000
      - WDS_SOCKET_PATH=/ws
    networks:
      - claude-flow-network
    depends_on:
      - backend

volumes:
  claude-flow-logs:

networks:
  claude-flow-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
